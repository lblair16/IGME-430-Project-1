const fs = require('fs'); // pull in the file system module

const index = fs.readFileSync(`${__dirname}/../hosted/client.html`);
const style = fs.readFileSync(`${__dirname}/../hosted/client.css`);
// added script to pull in our js bundle. This script is generated
// by our babel build/watch scripts in our package.json
const jsBundle = fs.readFileSync(`${__dirname}/../hosted/DONT_EDIT_bundle.js`);

// send back head request
const respondMeta = (request, response, status, type) => {
  // object for our headers
  const headers = {
    'Content-Type': type,
  };

  // send response without json object, just headers
  response.writeHead(status, headers);
  response.end();
};

// send back html page, only one for app
const getIndex = (request, response) => {
  // get the method type
  const { method } = request;
  if (method === 'GET') {
    response.writeHead(200, { 'Content-Type': 'text/html' });
    response.write(index);
    response.end();
  } else {
    respondMeta(request, response, 200, 'text/html');
  }
};

// send back css file
const getStyle = (request, response) => {
  // get the method type
  const { method } = request;
  if (method === 'GET') {
    response.writeHead(200, { 'Content-Type': 'text/css' });
    response.write(style);
    response.end();
  } else {
    respondMeta(request, response, 200, 'text/css');
  }
};

// added function to get our js file in our hosted folder.
// This js file is generated by babel build/run package.json.
// This ES5 file is created from the code in our ES6 file (in the client folder)
// adapted from class code
const getBundle = (request, response) => {
  // get the method type
  const { method } = request;
  if (method === 'GET') {
    response.writeHead(200, { 'Content-Type': 'application/javascript' });
    response.write(jsBundle);
    response.end();
  } else {
    respondMeta(request, response, 200, 'application/javascript');
  }
};

module.exports = {
  getIndex,
  getBundle,
  getStyle,
};
